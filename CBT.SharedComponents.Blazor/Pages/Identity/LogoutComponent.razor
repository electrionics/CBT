@using Microsoft.AspNetCore.Identity;
@using Microsoft.Extensions.Logging


@inject BaseAuthenticationStateProvider AuthenticationStateProvider
@inject SignInManager<User> _signInManager;
@inject NavigationManager NavigationManager;

@inject ILogger<LogoutComponent> _logger;
@inject IHttpClientFactory ClientFactory;
@inject JsInterop JsInterop;

@inject ApiConfig ApiConfig;

<PageTitle>Псионик - Выход из системы</PageTitle>

<header>
    <h1>Выход из системы</h1>
    <CascadingAuthenticationState>
        <AuthorizeView>
            <Authorized>
                <form class="form-inline" @onsubmit="Submit">
                    <button type="submit" class="nav-link btn btn-link text-dark">Нажмите для выхода</button>
                </form>
            </Authorized>
            <NotAuthorized>
                <p>Вы успешно выполнили выход из системы.</p>
            </NotAuthorized>
        </AuthorizeView>
    </CascadingAuthenticationState>
</header>

@code{
    private string returnUrl;

    public async Task Submit()
    {
        returnUrl = NavigationManager.BaseUri;

        var client = ClientFactory.CreateClient();
        var apiUrl = ApiConfig.ApiEndpointBaseUrl + "/account/logout";
        var result = await client.PostResultAsJsonAsync<LogoutResult, LogoutModel>(apiUrl, new());

        AuthenticationStateProvider.Logout();
        await JsInterop.WriteAuth(result);

        _logger.LogInformation("User logged out.");

        NavigationManager.NavigateTo(returnUrl, true);
    }
}