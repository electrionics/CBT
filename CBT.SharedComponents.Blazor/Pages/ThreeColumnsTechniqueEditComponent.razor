@using Microsoft.AspNetCore.Identity;

@using Syncfusion.Blazor.Popups;
@using Syncfusion.Blazor.DropDowns;

@inject DiariesFacade AutomaticThoughtsService;
@inject BaseAuthenticationStateProvider GetAuthenticationStateAsync;
@inject UserManager<User> UserManager;

<SfDialog Width="500px" IsModal="true" @bind-Visible="@IsVisible" ShowCloseIcon="true" ID="EditThought">
    <DialogTemplates>
        <Header>
            @(IsEdit ? "Дополнить" : "Добавить") запись
        </Header>
        <Content>
            <div class="mb-4">
                <label for="thought" class="form-label fw-bold">Автоматическая мысль</label> <span class="oi oi-shield" id="shield"></span>
                <SfTooltip Position="Position.TopCenter" Target="#shield" Content="Вся личная информация, вносимая Вами на нашем сайте, защищена шифрованием и недоступна другим пользователям без вашего явного на то согласия.">
                </SfTooltip>
                <textarea @bind="Model.Thought" class="form-control" id="thought" aria-describedby="thoughtHelp"></textarea>
                <div id="thoughtHelp" class="form-text">Мы не предоставляем доступ к вашим записям другим пользователям.</div>
            </div>
            <div class="mb-4">
                <label for="CognitiveErrors" class="form-label fw-bold">Когнитивные искажения</label>
                <SfMultiSelect ID="CognitiveErrors"
                               TValue="List<int>"
                               TItem="KeyValuePair<int, CognitiveErrorModel>"
                               DataSource="CognitiveErrors"
                               AllowFiltering="true"
                               ShowClearButton="true"
                               EnableCloseOnSelect="false"
                               MaximumSelectionLength="6"
                @bind-Value="@Model.Errors">
                    <MultiSelectFieldSettings Text="Value.Title" Value="Key">
                    </MultiSelectFieldSettings>
                </SfMultiSelect>
            </div>
            <div class="mb-4">
                <label for="rational" class="form-label fw-bold">Рациональный ответ</label>
                <textarea @bind="Model.RationalAnswer" class="form-control" id="rational" aria-describedby="rationalHelp"></textarea>
                <div id="rationalHelp" class="form-text">Опровергните негативную мысль.</div>
            </div>
        </Content>
    </DialogTemplates>
    <DialogButtons>
        <DialogButton Content="@(IsEdit ? "Сохранить" : "Добавить")" IsPrimary="true" CssClass="btn btn-success"
                      OnClick="SaveButtonClick" />
        <DialogButton Content="Отмена"
                      OnClick="CloseBtnClick" />
    </DialogButtons>
</SfDialog>

@code {
    [Parameter]
    public IEnumerable<KeyValuePair<int, CognitiveErrorModel>> CognitiveErrors { get; set; }

    public bool IsEdit { get; set; }

    public bool IsVisible { get; set; } = false;

    public ThreeColumnsTechniqueRecordModel Model { get; set; }

    public Action? SuccessCallback{ get; set; }


    protected override void OnInitialized()
    {
        Model = new ThreeColumnsTechniqueRecordModel();

        base.OnInitialized();
    }

    private void CloseBtnClick()
    {
        IsVisible = false;
    }

    private async Task SaveButtonClick()
    {
        var authstate = await GetAuthenticationStateAsync.GetAuthenticationStateAsync();
        var user = authstate.User;
        var currentUserId = UserManager.GetUserId(user);

        if (IsEdit)
        {
            await AutomaticThoughtsService.EditThoughtFull(Model, currentUserId);
        }
        else
        {
            await AutomaticThoughtsService.AddThoughtFull(Model, currentUserId);
        }

        Model = new ThreeColumnsTechniqueRecordModel();

        if (SuccessCallback != null)
        {
            SuccessCallback();
        }

        IsVisible = false;
    }
}