@using CBT.Web.Blazor.Data.Identity
@using CBT.Web.Blazor.Data.Model
@using CBT.Web.Blazor.Services
@using Microsoft.AspNetCore.Identity
@using Syncfusion.Blazor.Charts

@inject AuthenticationStateProvider GetAuthenticationStateAsync
@inject UserManager<User> UserManager;
@inject EmotionsService EmotionsService;

@code {
    private string? activeBreakpoint;
    private ChartSeriesType chartType;
}
<SfMediaQuery @bind-ActiveBreakpoint="activeBreakpoint"></SfMediaQuery>
@if (activeBreakpoint == "Medium" || activeBreakpoint == "Small")
{
    chartType = ChartSeriesType.StackingBar;
}
else
{
    chartType = ChartSeriesType.StackingColumn;
}

<SfChart @ref="DataChart1" Title="График изменения эмоций">
    <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category" />

    <ChartSeriesCollection>
        <ChartSeries DataSource="@items"
                     XName="Name"
                     YName="BeforePercent"
                     Type="@chartType"
                     EnableTooltip="true"
                     Name="До проработки"
                     Fill="orange"
                     StackingGroup="Before">
        </ChartSeries>
        <ChartSeries DataSource="@items"
                     XName="Name"
                     YName="AfterPercent"
                     Type="@chartType"
                     EnableTooltip="true"
                     Name="После проработки"
                     Fill="green"
                     StackingGroup="After">
        </ChartSeries>
    </ChartSeriesCollection>
    <ChartTooltipSettings Header="<b>${point.tooltip}</b>" Enable="true" Shared="true"></ChartTooltipSettings>
</SfChart>

<SfChart @ref="DataChart2" Title="График испытанных эмоций">
    <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category" />

    <ChartSeriesCollection>
        <ChartSeries DataSource="@items"
                     XName="Name"
                     YName="Count"
                     Type="@chartType"
                     Name="До проработки"
                     Fill="green">
        </ChartSeries>
    </ChartSeriesCollection>
    <ChartTooltipSettings Header="<b>${point.tooltip}</b>" Enable="true" Shared="true"></ChartTooltipSettings>
</SfChart>

@code {
    SfChart DataChart1;
    SfChart DataChart2;

    private IEnumerable<EmotionReportItem> items;

    [Parameter]
    public string? UserId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        items = await EmotionsService.GetEmotionsReport(UserId);
    }
}
