@page "/account/register/confirmation"

@using CBT.Web.Blazor.Data.Model.Identity

@inject NavigationManager NavigationManager;
@inject IHttpClientFactory ClientFactory;
@inject SfDialogService SfDialogService;

<h1>Подтверждение регистрации</h1>

@if (Model?.DisplayConfirmAccountLink ?? false)
{
    <p>
        <a id="confirm-link" href="@Model.EmailConfirmationUrl">Нажмите, чтобы завершить регистрацию.</a>
    </p>
}
else
{
    <p>
        Проверьте вашу электронную почту и следуйте инструкции в письме, чтобы завершить регистрацию.
    </p>
}

@code{
    private RegisterConfirmationModel? Model { get; set; }

    [Parameter]
    [SupplyParameterFromQuery(Name = "email")]
    public string Email{ get; set; }

    protected override async Task OnInitializedAsync()
    {
        var client = ClientFactory.CreateClient();
        var apiUrl = NavigationManager.ToAbsoluteUri($"api/account/register/confirmation?email={Email}");

        Model = await client.GetFromJsonAsync<RegisterConfirmationModel>(apiUrl);

        if (!string.IsNullOrEmpty(Model!.RedirectRelativeUrl))
        {
            NavigationManager.NavigateTo(Model.RedirectRelativeUrl, true);
        }
        else
        {
            await SfDialogService.AlertAsync("Ошибка.", "Письмо не отправлено, повторите попытку позже.");
        }

        await base.OnInitializedAsync();
    }
}