@using CBT.Web.Blazor;
@using CBT.Web.Blazor.Data
@using CBT.Web.Blazor.Data.Identity;
@using CBT.Web.Blazor.Data.Model;
@using CBT.Web.Blazor.Services;

@using Microsoft.AspNetCore.Identity;

@using Syncfusion.Blazor.Popups
@using Syncfusion.Blazor.DropDowns


@inject AuthenticationStateProvider GetAuthenticationStateAsync
@inject UserManager<User> UserManager;

@inject PsychologistReviewService PsychologistReviewService
@inject AutomaticThoughtsService AutomaticThoughtsService

<SfDialog Width="500px" IsModal="true" @bind-Visible="@IsVisible" ShowCloseIcon="true" ID="EditThought">
    <DialogTemplates>
        <Header>
            Запись пользователя @(Model.PatientDisplayName)
        </Header>
        <Content>
            <div class="mb-4">
                <label class="form-label fw-bold">Автоматическая мысль</label><br />
                @(Model.Value.Thought)
            </div>
            <div class="mb-4">
                <label class="form-label fw-bold">Когнитивные искажения</label><br />
                @{
                    var errors = Model.Value.Errors;

                    foreach (var error in errors)
                    {
                        <span>@CognitiveErrors[(int)error].Title</span>
                        <br />
                    }
                }
            </div>
            <div class="mb-4">
                <label class="form-label fw-bold">Рациональный ответ</label><br />
                @(Model.Value.RationalAnswer)
            </div>
            <div class="mb-4">
                <label for="CognitiveErrors" class="form-label">Когнитивные искажения - Ваша версия</label>
                <SfMultiSelect ID="CognitiveErrors"
                               TValue="List<int>"
                               TItem="KeyValuePair<int, CognitiveErrorModel>"
                               DataSource="CognitiveErrors"
                               AllowFiltering="true"
                               ShowClearButton="true"
                               EnableCloseOnSelect="false"
                               MaximumSelectionLength="6"
                               @bind-Value="Model.ReviewedErrors">
                    <MultiSelectFieldSettings Text="Value.Title" Value="Key">
                    </MultiSelectFieldSettings>
                </SfMultiSelect>
            </div>
            <div class="mb-4">
                <label for="rationalComment" class="form-label fw-bold">Ваш комментарий</label>
                <textarea @bind="Model.RationalAnswerComment" class="form-control" id="rationalComment"></textarea>
            </div>
        </Content>
    </DialogTemplates>
    <DialogButtons>
        <DialogButton Content="Сохранить" IsPrimary="true" CssClass="btn btn-success"
                      OnClick="SaveButtonClick" />
        <DialogButton Content="Отмена"
                      OnClick="CloseBtnClick" />
    </DialogButtons>
</SfDialog>

@code {
    [Parameter]
    public Dictionary<int, CognitiveErrorModel> CognitiveErrors { get; set; }

    public ThoughtRecordReview<ThreeColumnsRecordModel> Model { get; set; }
    public bool IsVisible { get; set; } = false;
    public Action? SuccessCallback { get; set; }


    private string? currentUserId;


    protected override async Task OnInitializedAsync()
    {
        var authstate = await GetAuthenticationStateAsync.GetAuthenticationStateAsync();
        var user = authstate.User;

        currentUserId = UserManager.GetUserId(user);
    }
    
    private void CloseBtnClick()
    {
        IsVisible = false;
    }

    private async Task SaveButtonClick()
    {
        await PsychologistReviewService.SaveThreeColumnRecordReview(Model, currentUserId);

        if (SuccessCallback != null)
        {
            SuccessCallback();
        }

        IsVisible = false;
    }
}